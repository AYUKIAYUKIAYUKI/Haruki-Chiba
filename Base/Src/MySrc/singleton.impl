//============================================================================
// 
// シングルトンクラステンプレート、テンプレート実装ファイル [singleton.impl]
// Author : 福田歩希
// 
//============================================================================

#pragma once

//****************************************************
// 静的メンバ変数の初期化
//****************************************************

// インスタンスのポインタ
template <typename T>
std::unique_ptr<T> CSingleton<T>::s_upInstance = nullptr;

//============================================================================
// インスタンスの参照を取得
//============================================================================
template <typename T>
T& CSingleton<T>::RefInstance()
{
	// 初回生成以降、インスタンスの参照を渡す
	if (s_upInstance)
	{
		return *s_upInstance;
	}

	// インスタンス未生成の場合のみ、新規生成
	std::unique_ptr<T> upInstance(DBG_NEW T());
	s_upInstance = std::move(upInstance);

	// 引数無しの初期化処理のみ自動的に行う
	if (!s_upInstance->Initialize())
	{
		s_upInstance->Finalize();
	}

	return *s_upInstance;
}