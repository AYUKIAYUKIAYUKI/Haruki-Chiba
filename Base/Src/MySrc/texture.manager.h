//============================================================================
// 
// テクスチャマネージャー、ヘッダーファイル [texture.manager.h]
// Author : 福田歩希
// 
//============================================================================

#pragma once

//****************************************************
// インクルードファイル
//****************************************************
#include "singleton.h"
#include "registry.h"

//****************************************************
// テクスチャマネージャークラスの定義
//****************************************************
class CTextureManager final : public CSingleton<CTextureManager>
{
	//****************************************************
	// フレンド宣言
	//****************************************************
	friend struct std::default_delete<CTextureManager>;
	friend CTextureManager& CSingleton<CTextureManager>::RefInstance();

	//****************************************************
	// 静的メンバ変数の定義
	//****************************************************
	static constexpr const char* INITIALIZE_PATH = "Data\\JSON\\Texture.List.json";

public:

	//****************************************************
	// function
	//****************************************************

	// レジストリの参照の取得
	inline CRegistry<LPDIRECT3DTEXTURE9>& RefRegistry() const { return *m_upRegistry; }

private:

	//****************************************************
	// special function
	//****************************************************
	CTextureManager();           // デフォルトコンストラクタ
	~CTextureManager() override; // デストラクタ

	//****************************************************
	// function
	//****************************************************
	
	// 初期化処理
	bool Initialize();
	
	// 終了処理
	void Finalize();

	//****************************************************
	// data
	//****************************************************
	std::unique_ptr<CRegistry<LPDIRECT3DTEXTURE9>> m_upRegistry; // テクスチャ用レジストリ
};